{"version":3,"sources":["components/ConversationSearch/index.js","components/ConversationListItem/index.js","components/Toolbar/index.js","socket.js","components/Compose/index.js","components/ToolbarButton/index.js","components/Message/index.js","components/MessageList/index.js","components/ConversationList/index.js","components/Messenger/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["ConversationSearch","react_default","a","createElement","className","type","placeholder","Component","ConversationListItem","shave","_this$props$data","this","props","data","photo","name","text","tomsg","Fragment","onClick","showMsgHistory","bind","src","alt","onError","e","target","onerror","Toolbar","_this$props","title","leftItems","rightItems","socket","io","user","on","msg","console","log","axios","post","then","res","Compose","doSomething","preventDefault","emit","setState","message","value","action","onSubmit","id","ToolbarButton","icon","concat","Message","isMine","startsSequence","endsSequence","showTimestamp","friendlyTimestamp","moment","timestamp","format","join","MessageList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getMessages","persons","messages","prevState","objectSpread","result","state","prevProps","i","messageCount","length","previous","current","next","author","currentMoment","previousMoment","previousDuration","duration","diff","as","nextMoment","nextDuration","push","components_Message_Message","key","components_Toolbar_Toolbar","components_ToolbarButton_ToolbarButton","renderMessages","components_Compose_Compose","ConversationList","tomsg1","getConversations","get","crossdomain","response","conversations","map","picture","sellerid","_this2","components_ConversationSearch_ConversationSearch","conversation","components_ConversationListItem_ConversationListItem","components_MessageList_MessageList","Messenger","components_ConversationList_ConversationList","App","components_Messenger_Messenger","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11328586.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './ConversationSearch.css';\n\nexport default class ConversationSearch extends Component {\n  render() {\n    return (\n      <div className=\"conversation-search\">\n        <input\n          type=\"search\"\n          className=\"conversation-search-input\"\n          placeholder=\"Search Messages\"\n        />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport shave from 'shave';\nimport './ConversationListItem.css';\nimport axios from 'axios';\n\nexport default class ConversationListItem extends Component {\n  // const sellerid = '';\n  componentDidMount() {\n    shave('.conversation-snippet', 20);\n  }\n\n \n  render() {\n    const { photo, name, text,tomsg } = this.props.data;\n\n    return (\n      <React.Fragment>\n        <div className=\"conversation-list-item\" onClick={this.props.showMsgHistory.bind(this,tomsg)}>\n          <img className=\"conversation-photo\" src={photo} alt={name} onError={(e)=>{e.target.onerror = null; e.target.src=\"https://beldara.com/images/User_Avatarpng.png\"}} />\n          <div className=\"conversation-info\">\n            <h1 className=\"conversation-title\">{ name }</h1>\n            <p className=\"conversation-snippet\">{ text }</p>\n          </div>\n        </div>\n        \n      </React.Fragment>\n      \n    );\n  }\n}","import React, { Component } from 'react';\nimport './Toolbar.css';\n\nexport default class Toolbar extends Component {\n  render() {\n    const { title, leftItems, rightItems } = this.props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n  }\n}","import io from 'socket.io-client';\nimport axios from 'axios';\n\n// export const socket = io('http://localhost:8000');\n// socket.on('connect',() => {\n//     console.log('Connected');\n// })\n// var socket = ''\n\n// state = {\n//     name: '',\n//   }\nconst socket = io('http://localhost:8000');\n\nconst user = {\n    name: ''\n  };\n\nsocket.on('chat message', function(msg){\n    console.log(msg);\n    axios.post(`https://jsonplaceholder.typicode.com/users`, { user })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n      })\n});\n\nexport default socket;","import React, { Component } from 'react';\nimport './Compose.css';\n// import configureSocket from '../../socket';\nimport socket from '../../socket'\n// import $ from \"jquery\";\n\n\nexport default class Compose extends Component {\n  render() {\n    // var configureSocket.socket = '';\n    this.doSomething = function (e) {\n     \n      e.preventDefault();\n      console.log('it works!');\n      socket.emit('chat message', 's');\n      // $('#m').val('');\n      return false;\n   }\n    this.msg = function(e) {\n        this.setState({message: e.target.value});\n    }\n\n    return (\n      <div className=\"compose\">\n        <form action=\"\" onSubmit={this.doSomething}>\n          <input\n            type=\"text\"\n            id=\"m\"\n            className=\"compose-input\"\n            placeholder=\"Type a message, @name\"\n            \n          />\n        </form>\n        {/* {\n          this.props.rightItems\n        } */}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './ToolbarButton.css';\n\nexport default class ToolbarButton extends Component {\n  render() {\n    const { icon } = this.props;\n    return (\n      <i className={`toolbar-button ${icon}`} />\n    );\n  }\n}","import React, { Component } from 'react';\nimport moment from 'moment';\nimport './Message.css';\n\nexport default class Message extends Component {\n  render() {\n    const {\n      data,\n      isMine,\n      startsSequence,\n      endsSequence,\n      showTimestamp\n    } = this.props;\n\n    const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n    return (\n      <div className={[\n        'message',\n        `${isMine ? 'mine' : ''}`,\n        `${startsSequence ? 'start' : ''}`,\n        `${endsSequence ? 'end' : ''}`\n      ].join(' ')}>\n        {\n          showTimestamp &&\n            <div className=\"timestamp\">\n              { friendlyTimestamp }\n            </div>\n        }\n\n        <div className=\"bubble-container\">\n          <div className=\"bubble\" title={friendlyTimestamp}>\n            { data.message }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport './MessageList.css';\n\nconst MY_USER_ID = 'apple';\n\nexport default class MessageList extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      messages: []\n    };\n    // this.getMessages(this.props)\n    // console.log(222)\n  }\n\n  // componentDidMount() {\n  //   // const user = '72222'\n  //   console.log('Messagelist1')\n  //   console.log(this.props.tomsg)\n  //   this.getMessages(this.props);\n  // }\n  componentDidUpdate(prevProps) {\n    if (this.props.tomsg !== prevProps.tomsg) {\n      console.log(this.props.tomsg)\n      console.log('Messagelist')\n      this.getMessages(this.props.tomsg);\n    }\n  }\n\n  getMessages = () => {\n    console.log(1);\n    let messages = ''\n\n    axios.post(`https://beldara.com/react-api/get_history_chat.php?user=122`)\n      .then(res => {\n        const persons = res;\n        console.log(persons);\n        this.setState({ messages:[res.data] });\n        this.setState(prevState => {\n          return {\n            ...prevState,\n            messages: res.data.result\n          }\n        });\n          \n      })\n    // this.setState(prevState => {\n    //   return {\n    //     ...prevState,\n    //     messages: [\n    //       {\n    //         id: 1,\n    //         author: 'apple',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 2,\n    //         author: 'orange',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 3,\n    //         author: 'orange',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 4,\n    //         author: 'apple',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 5,\n    //         author: 'apple',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 6,\n    //         author: 'apple',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 7,\n    //         author: 'orange',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 8,\n    //         author: 'orange',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 9,\n    //         author: 'apple',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 10,\n    //         author: 'orange',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       }\n    //     ]\n    //   };\n    // });\n      // console.log(this.messages)\n  }\n\n  renderMessages() {\n    \n    let i = 0;\n    let messageCount = this.state.messages.length;\n    let messages = [];\n\n    while (i < messageCount) {\n      let previous = this.state.messages[i - 1];\n      let current = this.state.messages[i];\n      let next = this.state.messages[i + 1];\n      let isMine = current.author === MY_USER_ID;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(currentMoment.diff(previousMoment));\n        prevBySameAuthor = previous.author === current.author;\n        \n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n\n      messages.push(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n        />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n\n    return messages;\n  }\n\n  render() {\n    \n    return(\n      <div className=\"message-list\">\n        <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        />\n\n        <div className=\"message-list-container\">{this.renderMessages()}</div>\n        {/* <div className=\"message-list-container\"></div> */}\n\n        <Compose rightItems={[\n          <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\n          <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\n          <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\n          <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\n          <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\n        ]}/>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport MessageList from '../MessageList'\nimport ToolbarButton from '../ToolbarButton';\nimport axios from 'axios';\n\nimport './ConversationList.css';\n\nexport default class ConversationList extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      conversations: [],\n      messages:[],\n      tomsg1:[]\n    };\n  }\n  getMessages = () => {\n    console.log(1);\n        let messages = ''\n\n    axios.post(`https://beldara.com/react-api/get_history_chat.php?user=122`)\n      .then(res => {\n        const persons = res;\n        console.log(persons);\n        this.setState({ messages:[res.data] });\n        this.setState(prevState => {\n          return {\n            ...prevState,\n            messages: res.data.result\n          }\n        });\n          \n      })\n    // this.setState(prevState => {\n    //   return {\n    //     ...prevState,\n    //     messages: [\n    //       {\n    //         id: 1,\n    //         author: 'apple',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 2,\n    //         author: 'orange',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 3,\n    //         author: 'orange',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 4,\n    //         author: 'apple',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 5,\n    //         author: 'apple',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 6,\n    //         author: 'apple',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 7,\n    //         author: 'orange',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 8,\n    //         author: 'orange',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 9,\n    //         author: 'apple',\n    //         message: 'Hello world! This is a long message that will hopefully get wrapped by our message bubble component! We will see how well it works.',\n    //         timestamp: new Date().getTime()\n    //       },\n    //       {\n    //         id: 10,\n    //         author: 'orange',\n    //         message: 'It looks like it wraps exactly as it is supposed to. Lets see what a reply looks like!',\n    //         timestamp: new Date().getTime()\n    //       }\n    //     ]\n    //   };\n    // });\n      // console.log(this.messages)\n  }\n  \n  componentDidMount() {\n    this.getConversations();\n  }\n  showMsgHistory =  (tomsg) => {\n    // const {tomsg} = this.props;\n    console.log(tomsg)\n    this.setState({ tomsg1:tomsg })\n    \n  }\n  getConversations = () => {\n    axios.get('https://beldara.com/react-api/get_contact_list.php',{ crossdomain: true })\n    .then(response => {\n      this.setState(prevState => {\n        let conversations = response.data.result.map(result => {\n          return {\n            photo: result.picture,\n            name: `${result.name}`,\n            // text: 's'\n            tomsg:result.sellerid\n          };\n        });\n\n        return { ...prevState, conversations };\n      });\n    });\n  }\n \n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"scrollable sidebar\">\n        <div className=\"conversation-list\">\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        />\n        <ConversationSearch />\n        {\n          this.state.conversations.map(conversation =>\n            <ConversationListItem\n              key={conversation.tomsg}\n              data={conversation}\n              showMsgHistory={this.showMsgHistory}\n            />\n          )\n        }\n        \n      </div>\n      </div>\n        <div className=\"scrollable content\">\n          <MessageList \n            tomsg={this.state.tomsg1}\n          />\n        </div>\n      </React.Fragment>\n\n    );\n  }\n}","import React, { Component } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport './Messenger.css';\n\nexport default class Messenger extends Component {\n  render() {\n    return (\n      <div className=\"messenger\">\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n\n        {/* <div className=\"scrollable sidebar\">\n          <ConversationList />\n        </div> */}\n        <ConversationList />\n       \n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Messenger from '../Messenger';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Messenger />\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}